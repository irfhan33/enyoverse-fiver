{"ast":null,"code":"import _asyncToGenerator from\"E:/fiver-fix/enyoverse/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"E:\\\\fiver-fix\\\\enyoverse\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{BScMainnet}from\"../../utils/chain.configs\";import{TYPES}from\"./Types\";// eslint-disable-next-line import/no-anonymous-default-export\nexport default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var dispatch=arguments.length>1&&arguments[1]!==undefined?arguments[1]:function(){};var adminWallet=state.adminWallet,account=state.account,provider=state.provider,web3Instance=state.web3Instance,WalletConnect=state.WalletConnect,Web3=state.Web3,isWalletConnected=state.isWalletConnected,isCorrectChain=state.isCorrectChain;/**\n   * @info this will load web3 library using dynamic import. by importing dynamically we minimize the main bundle size\n   */var loadWeb3JS=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$import,web3;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return import(\"web3\"/* webpackChunkName: \"web3-main\" */);case 2:_yield$import=_context.sent;web3=_yield$import.default;dispatch({type:TYPES.WEB3_JS_LOADED,payload:web3});case 5:case\"end\":return _context.stop();}}},_callee);}));return function loadWeb3JS(){return _ref.apply(this,arguments);};}();/**\n   * @info this will create an instance of web3Modal\n   */var initializeWalletConnectProvider=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$import2,WalletConnectProvider,WalletConnect;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return import(\"@walletconnect/web3-provider\"/* webpackChunkName: \"walletconnect/web3-provider\" */);case 2:_yield$import2=_context2.sent;WalletConnectProvider=_yield$import2.default;WalletConnect=new WalletConnectProvider({chainId:56,rpc:{56:\"https://bsc-dataseed1.binance.org\"}});dispatch({type:TYPES.WALLET_CONNECT_INITIALIZED,payload:WalletConnect});case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function initializeWalletConnectProvider(){return _ref2.apply(this,arguments);};}();var connectMetamask=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _window,ethereum;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_window=window,ethereum=_window.ethereum;if(ethereum){_context3.next=3;break;}return _context3.abrupt(\"return\",window.open(\"https://metamask.io/download\",\"_blank\"));case 3:_context3.next=5;return ethereum.request({method:\"eth_requestAccounts\"});case 5:handleProviderChange(ethereum);case 6:case\"end\":return _context3.stop();}}},_callee3);}));return function connectMetamask(){return _ref3.apply(this,arguments);};}();var connectWalletWtihQR=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return WalletConnect.enable();case 2:handleProviderChange(WalletConnect);case 3:case\"end\":return _context4.stop();}}},_callee4);}));return function connectWalletWtihQR(){return _ref4.apply(this,arguments);};}();/**\n   * @dev this will display web3 modal with options. once user selects provider it will update the seleted provider and wallet address in application state.\n   */var handleProviderChange=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(provider){var web3Instance,account;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:web3Instance=new Web3(provider);_context5.next=3;return web3Instance.eth.getCoinbase();case 3:account=_context5.sent;dispatch({type:TYPES.WALLET_CONNECTED,payload:{web3Instance:web3Instance,account:account,provider:provider}});return _context5.abrupt(\"return\",{web3Instance:web3Instance,account:account,provider:provider});case 6:case\"end\":return _context5.stop();}}},_callee5);}));return function handleProviderChange(_x){return _ref5.apply(this,arguments);};}();/**\n   *\n   * @dev this function creates request for the network changes in metmaks. if the requested netwok is not available it will request to add it in metmask.\n   * @params chainId is the hex string of the chain Id. default is set to Binance mainnet\n   */var switchChain=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var chainId,_args6=arguments;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:chainId=_args6.length>0&&_args6[0]!==undefined?_args6[0]:\"0x38\";_context6.prev=1;_context6.next=4;return provider.request({method:\"wallet_switchEthereumChain\",params:[{chainId:chainId}]});case 4:_context6.next=11;break;case 6:_context6.prev=6;_context6.t0=_context6[\"catch\"](1);if(!(_context6.t0.code===4902||/Unrecognized chain ID/.test(_context6.t0.message))){_context6.next=11;break;}_context6.next=11;return provider.request({method:\"wallet_addEthereumChain\",params:BScMainnet});case 11:case\"end\":return _context6.stop();}}},_callee6,null,[[1,6]]);}));return function switchChain(){return _ref6.apply(this,arguments);};}();/**\n   * @info this function will checked the pre-conditions for the transaction to be sent\n      1) is wallet connected?\n      2) is seleted network correct?\n   * @dev this function will send transaction\n   */var sendTransaction=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(value){var transactionParameters;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(isWalletConnected){_context7.next=2;break;}return _context7.abrupt(\"return\");case 2:if(isCorrectChain){_context7.next=5;break;}_context7.next=5;return switchChain();case 5:value=web3Instance.utils.toWei(value.toString(),\"ether\");// amount should be in wei. this function converts BnB to wei which is equivalent 1e18 (1BNB = 1e18 wei)\ntransactionParameters={to:adminWallet,// Required except during contract publications.\nfrom:account,// Required must match user's active address.\nvalue:web3Instance.utils.toHex(value)// the wei amount should be in hex. this function converts to hex. Only required to send ether to the recipient from the initiating external account.\n};// txHash is a hex string\n// As with any RPC call, it may throw an error\n_context7.next=9;return provider.request({method:\"eth_sendTransaction\",params:[transactionParameters]});case 9:return _context7.abrupt(\"return\",_context7.sent);case 10:case\"end\":return _context7.stop();}}},_callee7);}));return function sendTransaction(_x2){return _ref7.apply(this,arguments);};}();/**\n   * @dev it returns current selected blockchain network in metamask\n   */var getChainId=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(){var chainId;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:if(web3Instance){_context8.next=2;break;}return _context8.abrupt(\"return\",null);case 2:_context8.next=4;return web3Instance.eth.getChainId();case 4:chainId=_context8.sent;return _context8.abrupt(\"return\",chainId);case 6:case\"end\":return _context8.stop();}}},_callee8);}));return function getChainId(){return _ref8.apply(this,arguments);};}();return{state:state,dispatch:dispatch,sendTransaction:sendTransaction,switchChain:switchChain,getChainId:getChainId,initializeWalletConnectProvider:initializeWalletConnectProvider,loadWeb3JS:loadWeb3JS,connectMetamask:connectMetamask,connectWalletWtihQR:connectWalletWtihQR};});","map":{"version":3,"names":["BScMainnet","TYPES","state","dispatch","adminWallet","account","provider","web3Instance","WalletConnect","Web3","isWalletConnected","isCorrectChain","loadWeb3JS","web3","default","type","WEB3_JS_LOADED","payload","initializeWalletConnectProvider","WalletConnectProvider","chainId","rpc","WALLET_CONNECT_INITIALIZED","connectMetamask","window","ethereum","open","request","method","handleProviderChange","connectWalletWtihQR","enable","eth","getCoinbase","WALLET_CONNECTED","switchChain","params","code","test","message","sendTransaction","value","utils","toWei","toString","transactionParameters","to","from","toHex","getChainId"],"sources":["E:/fiver-fix/enyoverse/src/contexts/web3Context/actions.js"],"sourcesContent":["import { BScMainnet } from \"../../utils/chain.configs\";\nimport { TYPES } from \"./Types\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = {}, dispatch = () => {}) => {\n  let {\n    adminWallet,\n    account,\n    provider,\n    web3Instance,\n    WalletConnect,\n    Web3,\n    isWalletConnected,\n    isCorrectChain,\n  } = state;\n\n  /**\n   * @info this will load web3 library using dynamic import. by importing dynamically we minimize the main bundle size\n   */\n  const loadWeb3JS = async () => {\n    const { default: web3 } = await import(\n      \"web3\" /* webpackChunkName: \"web3-main\" */\n    );\n\n    dispatch({ type: TYPES.WEB3_JS_LOADED, payload: web3 });\n  };\n\n  /**\n   * @info this will create an instance of web3Modal\n   */\n  const initializeWalletConnectProvider = async () => {\n    const { default: WalletConnectProvider } = await import(\n      \"@walletconnect/web3-provider\" /* webpackChunkName: \"walletconnect/web3-provider\" */\n    );\n\n    const WalletConnect = new WalletConnectProvider({\n      chainId: 56,\n      rpc: {\n        56: \"https://bsc-dataseed1.binance.org\",\n      },\n    });\n\n    dispatch({\n      type: TYPES.WALLET_CONNECT_INITIALIZED,\n      payload: WalletConnect,\n    });\n  };\n  const connectMetamask = async () => {\n    const { ethereum } = window;\n    if (!ethereum) return window.open(\"https://metamask.io/download\", \"_blank\");\n    await ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n\n    handleProviderChange(ethereum);\n  };\n\n  const connectWalletWtihQR = async () => {\n    await WalletConnect.enable();\n\n    handleProviderChange(WalletConnect);\n  };\n\n  /**\n   * @dev this will display web3 modal with options. once user selects provider it will update the seleted provider and wallet address in application state.\n   */\n  const handleProviderChange = async (provider) => {\n    const web3Instance = new Web3(provider);\n    const account = await web3Instance.eth.getCoinbase();\n\n    dispatch({\n      type: TYPES.WALLET_CONNECTED,\n      payload: {\n        web3Instance,\n        account,\n        provider,\n      },\n    });\n    return { web3Instance, account, provider };\n  };\n\n  /**\n   *\n   * @dev this function creates request for the network changes in metmaks. if the requested netwok is not available it will request to add it in metmask.\n   * @params chainId is the hex string of the chain Id. default is set to Binance mainnet\n   */\n  const switchChain = async (chainId = \"0x38\") => {\n    try {\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId }],\n      });\n    } catch (err) {\n      // if no chain found request to add\n      if (err.code === 4902 || /Unrecognized chain ID/.test(err.message)) {\n        await provider.request({\n          method: \"wallet_addEthereumChain\",\n          params: BScMainnet,\n        });\n      }\n    }\n  };\n\n  /**\n   * @info this function will checked the pre-conditions for the transaction to be sent\n      1) is wallet connected?\n      2) is seleted network correct?\n   * @dev this function will send transaction\n   */\n  const sendTransaction = async (value) => {\n    if (!isWalletConnected) return;\n    if (!isCorrectChain) await switchChain();\n\n    value = web3Instance.utils.toWei(value.toString(), \"ether\"); // amount should be in wei. this function converts BnB to wei which is equivalent 1e18 (1BNB = 1e18 wei)\n\n    const transactionParameters = {\n      to: adminWallet, // Required except during contract publications.\n      from: account, // Required must match user's active address.\n      value: web3Instance.utils.toHex(value), // the wei amount should be in hex. this function converts to hex. Only required to send ether to the recipient from the initiating external account.\n    };\n\n    // txHash is a hex string\n    // As with any RPC call, it may throw an error\n    return await provider.request({\n      method: \"eth_sendTransaction\",\n      params: [transactionParameters],\n    });\n  };\n\n  /**\n   * @dev it returns current selected blockchain network in metamask\n   */\n  const getChainId = async () => {\n    if (!web3Instance) return null;\n    const chainId = await web3Instance.eth.getChainId();\n    return chainId;\n  };\n\n  return {\n    state,\n    dispatch,\n    sendTransaction,\n    switchChain,\n    getChainId,\n    initializeWalletConnectProvider,\n    loadWeb3JS,\n\n    connectMetamask,\n    connectWalletWtihQR,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}